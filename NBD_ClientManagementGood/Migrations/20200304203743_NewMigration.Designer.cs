// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NBD_ClientManagementGood.Data;

namespace NBD_ClientManagementGood.Migrations
{
    [DbContext(typeof(NBD_ClientManagementGoodContext))]
    [Migration("20200304203743_NewMigration")]
    partial class NewMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("CMO")
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("NBD_ClientManagementGood.Models.Bid", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Amount");

                    b.Property<string>("BlueprintCode")
                        .IsRequired()
                        .HasMaxLength(12);

                    b.Property<DateTime>("EstEnd");

                    b.Property<DateTime>("EstStart");

                    b.Property<string>("Location")
                        .IsRequired();

                    b.Property<int>("ProjectID");

                    b.HasKey("ID");

                    b.HasIndex("ProjectID");

                    b.ToTable("Bids");
                });

            modelBuilder.Entity("NBD_ClientManagementGood.Models.City", b =>
                {
                    b.Property<int>("CityID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CountryID");

                    b.Property<string>("Name")
                        .HasMaxLength(50);

                    b.Property<string>("State")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.HasKey("CityID");

                    b.HasIndex("CountryID");

                    b.ToTable("Cities");
                });

            modelBuilder.Entity("NBD_ClientManagementGood.Models.Client", b =>
                {
                    b.Property<int>("ClientID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<int>("CityID");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("FormalName");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("MiddleName")
                        .HasMaxLength(50);

                    b.Property<long>("Phone");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("eMail")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.HasKey("ClientID");

                    b.HasIndex("CityID");

                    b.HasIndex("Phone")
                        .IsUnique();

                    b.HasIndex("eMail")
                        .IsUnique();

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("NBD_ClientManagementGood.Models.Country", b =>
                {
                    b.Property<int>("CountryID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasMaxLength(50);

                    b.HasKey("CountryID");

                    b.ToTable("Countries");
                });

            modelBuilder.Entity("NBD_ClientManagementGood.Models.HeadStaff", b =>
                {
                    b.Property<int>("ID");

                    b.Property<int>("LabourUnitID");

                    b.Property<string>("StaffName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<long>("StaffPhone");

                    b.HasKey("ID");

                    b.HasIndex("StaffName");

                    b.ToTable("HeadStaffs");
                });

            modelBuilder.Entity("NBD_ClientManagementGood.Models.LabourDepartment", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DepartmentDescription")
                        .IsRequired()
                        .HasMaxLength(250);

                    b.Property<int>("DepartmentTotalHours");

                    b.Property<int>("LabourUnitID");

                    b.HasKey("ID");

                    b.ToTable("LabourDepartments");
                });

            modelBuilder.Entity("NBD_ClientManagementGood.Models.LabourUnit", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("HeadStaffID");

                    b.Property<int>("LabourDepartmentID");

                    b.Property<int>("LabourUnitCost");

                    b.Property<string>("LabourUnitDescription")
                        .IsRequired()
                        .HasMaxLength(250);

                    b.Property<int>("LabourUnitEstCost");

                    b.Property<int>("LabourUnitHours");

                    b.Property<string>("LabourUnitTask")
                        .IsRequired()
                        .HasMaxLength(1000);

                    b.Property<string>("LabourUnitTaskName")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.HasKey("ID");

                    b.HasIndex("LabourDepartmentID");

                    b.ToTable("LabourUnits");
                });

            modelBuilder.Entity("NBD_ClientManagementGood.Models.Production", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BidID");

                    b.Property<string>("Name");

                    b.HasKey("ID");

                    b.HasIndex("BidID");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasFilter("[Name] IS NOT NULL");

                    b.ToTable("Productions");
                });

            modelBuilder.Entity("NBD_ClientManagementGood.Models.Project", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ClientID");

                    b.Property<DateTime>("Date");

                    b.Property<DateTime>("EndDate");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<DateTime>("StartDate");

                    b.HasKey("ID");

                    b.HasIndex("ClientID");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("NBD_ClientManagementGood.Models.Bid", b =>
                {
                    b.HasOne("NBD_ClientManagementGood.Models.Project", "Project")
                        .WithMany("Bids")
                        .HasForeignKey("ProjectID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("NBD_ClientManagementGood.Models.City", b =>
                {
                    b.HasOne("NBD_ClientManagementGood.Models.Country", "Country")
                        .WithMany("Cities")
                        .HasForeignKey("CountryID")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("NBD_ClientManagementGood.Models.Client", b =>
                {
                    b.HasOne("NBD_ClientManagementGood.Models.City", "City")
                        .WithMany("Clients")
                        .HasForeignKey("CityID")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("NBD_ClientManagementGood.Models.HeadStaff", b =>
                {
                    b.HasOne("NBD_ClientManagementGood.Models.LabourUnit", "LabourUnit")
                        .WithMany("HeadStaffs")
                        .HasForeignKey("ID")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("NBD_ClientManagementGood.Models.LabourUnit", b =>
                {
                    b.HasOne("NBD_ClientManagementGood.Models.LabourDepartment", "LabourDepartment")
                        .WithMany("LabourUnits")
                        .HasForeignKey("LabourDepartmentID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("NBD_ClientManagementGood.Models.Production", b =>
                {
                    b.HasOne("NBD_ClientManagementGood.Models.Bid", "Bid")
                        .WithMany()
                        .HasForeignKey("BidID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("NBD_ClientManagementGood.Models.Project", b =>
                {
                    b.HasOne("NBD_ClientManagementGood.Models.Client", "Client")
                        .WithMany("Projects")
                        .HasForeignKey("ClientID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
